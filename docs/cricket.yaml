openapi: 3.0.0
info:
  title: Cricket API
  version: 1.0.0
  description: |
    API for managing a global screen layout divided into 4 quadrants.
    - Stores one layout document in MongoDB.
    - Emits real-time updates using Socket.IO on layout changes.

servers:
  - url: /api
    description: Base API path

tags:
  - name: CricketMatch
    description: Endpoints for managing cricket matches and live updates

paths:
  /:
    post:
      summary: Create a new cricket match
      tags: [CricketMatch]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - teamAId
                - teamBId
                - overs
                - fixtureName
                - captains
                - wicketKeepers
                - tossWinner
                - tossDecision
              properties:
                teamAId:
                  type: string
                teamBId:
                  type: string
                overs:
                  type: integer
                  enum: [6, 8, 10]
                fixtureName:
                  type: string
                captains:
                  type: object
                  properties:
                    teamA:
                      type: string
                    teamB:
                      type: string
                wicketKeepers:
                  type: object
                  properties:
                    teamA:
                      type: string
                    teamB:
                      type: string
                tossWinner:
                  type: string
                tossDecision:
                  type: string
                  enum: [bat, bowl]
      responses:
        201:
          description: Match created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object

    get:
      summary: Get all matches
      tags: [CricketMatch]
      responses:
        200:
          description: A list of matches
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /{matchId}:
    get:
      summary: Get a single match by ID
      tags: [CricketMatch]
      parameters:
        - in: path
          name: matchId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Match found
          content:
            application/json:
              schema:
                type: object

    patch:
      summary: Update a match
      tags: [CricketMatch]
      parameters:
        - in: path
          name: matchId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: Match updated
          content:
            application/json:
              schema:
                type: object

    delete:
      summary: Delete a match
      tags: [CricketMatch]
      parameters:
        - in: path
          name: matchId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Match deleted
          content:
            application/json:
              schema:
                type: object

  /score:
    patch:
      summary: Update a player score in a match
      tags: [CricketMatch]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [matchId, playerId, team]
              properties:
                matchId:
                  type: string
                playerId:
                  type: string
                team:
                  type: string
                  enum: [A, B]
                runs:
                  type: integer
                wickets:
                  type: integer
                ballsFaced:
                  type: integer
                oversBowled:
                  type: number
                extraBalls:
                  type: integer
      responses:
        200:
          description: Score updated
          content:
            application/json:
              schema:
                type: object

  /details/{matchId}:
    get:
      summary: Get full stats of a match
      tags: [CricketMatch]
      parameters:
        - in: path
          name: matchId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Match stats returned
          content:
            application/json:
              schema:
                type: object

  /{matchId}/highlight:
    post:
      summary: Add a highlight to a match
      tags: [CricketMatch]
      parameters:
        - in: path
          name: matchId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [over, ball, batsman, bowler]
              properties:
                over:
                  type: integer
                ball:
                  type: integer
                batsman:
                  type: string
                bowler:
                  type: string
                run:
                  type: integer
                isFour:
                  type: boolean
                isSix:
                  type: boolean
                isWicket:
                  type: boolean
                wicketType:
                  type: string
                  enum:
                    [bowled, caught, runout, lbw, hitwicket, stumped, retired]
                fielder:
                  type: string
                shotDirection:
                  type: string
                  enum:
                    [
                      leg side,
                      off side,
                      cover,
                      mid-wicket,
                      square leg,
                      third man,
                      straight,
                      point,
                      long on,
                      long off,
                    ]
                extraType:
                  type: string
                  enum: [no ball, wide, bye, leg bye]
                commentary:
                  type: string
      responses:
        201:
          description: Highlight added
          content:
            application/json:
              schema:
                type: object

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

security:
  - ApiKeyAuth: []
